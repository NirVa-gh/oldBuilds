from aiogram import Bot, types
import random
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
#__________________________________________________________
from Config import Token
from jokes import jokes
#__________________________________________________________
bot = Bot(token=Token) # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –ø–æ —Ç–æ–∫–µ–Ω—É
dp = Dispatcher(bot)  # –ü—Ä–æ—Å—Ç–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
#__________________________________________________________

menu = [
    [InlineKeyboardButton(text="üìù –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="generate_text"),
    InlineKeyboardButton(text="üñº –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="generate_image")],
    [InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="buy_tokens"),
    InlineKeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance")],
    [InlineKeyboardButton(text="üíé Jokes", callback_data="Jokes"),
    InlineKeyboardButton(text="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã", callback_data="free_tokens")],
    [InlineKeyboardButton(text="üîé –ü–æ–º–æ—â—å", callback_data="help")]
]
capsule_menu = InlineKeyboardMarkup(inline_keyboard=menu)
exit_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")]], resize_keyboard=True)
iexit_kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", callback_data="menu")]])

Greet_msg = "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç"
Menu_msg = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

@dp.message_handler(commands="Menu")
async def proccess_Menu(message: types.Message):
    await message.answer(Greet_msg.format(name=message.from_user.full_name), reply_markup=capsule_menu)

#__________________________________________________________


button_command_settings = KeyboardButton("settings") # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
button_command_info = KeyboardButton("info") # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
capsule_start = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(button_command_info,button_command_settings)
#__________________________________________________________
button_request = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True)
).add(
    KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏è', request_location=True)
)
#__________________________________________________________
button_info = KeyboardButton("Information", callback_data="Info")
button_settings = KeyboardButton("Settings", callback_data="Set")
capsule_info = InlineKeyboardMarkup().add(button_info,button_settings)

'''button_command_joke = KeyboardButton("/Joke")
capsule_command = InlineKeyboardMarkup().add(button_command_joke)'''

button_source = KeyboardButton("Reference to source", url = "https://www.youtube.com/watch?v=5RlXStnMirE&ab_channel=BrettLenahan")
capsule_source = InlineKeyboardMarkup(row_width=2).add(button_source)
#__________________________________________________________
joke_button_one = KeyboardButton("JokeOne", callback_data="JokeOne")
joke_button_two = KeyboardButton("JokeTwo", callback_data="JokeTwo")

capsule_joke = InlineKeyboardMarkup().add(joke_button_one,joke_button_two)
#__________________________________________________________

#__________________________________________________________
@dp.message_handler(commands="Joke")
async def proccess_start(message: types.Message):
    await message.reply("B—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É - Joke", reply_markup=capsule_joke)
@dp.message_handler(commands="Start")
async def proccess_start(message: types.Message):
    await message.reply("B—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É - Start", reply_markup=capsule_info)
@dp.message_handler(commands=['Location'])
async def process_hi6_command(message: types.Message):
    await message.reply("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n", reply_markup=button_request)
@dp.message_handler(commands=['Source'])
async def process_command_2(message: types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤–ª—è—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ", reply_markup=capsule_source)
#__________________________________________________________
@dp.callback_query_handler(lambda c: c.data == "Info")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã\n/Joke\nSource\n/Location")
@dp.callback_query_handler(lambda c: c.data == "Set")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ - settings")
@dp.callback_query_handler(lambda c: c.data == "Source")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ - info")
@dp.callback_query_handler(lambda c: c.data == "JokeOne")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "JokeOne")
@dp.callback_query_handler(lambda c: c.data == "JokeTwo")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "JokeTwo")
# __________________________________________________________

@dp.callback_query_handler(lambda c: c.data == "Jokes")
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, jokes[random.randint(0,len(jokes))])




executor.start_polling(dp)
